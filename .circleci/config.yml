version: 2

orbs:
  gcp-gcr: circleci/gcp-gcr@0.14.1

jobs:
  build_test_uberjar:
    executor: default
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
#    environment:
#      JVM_OPTS: -Xmx3200m
#      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: cat /dev/null | sbt test:compile
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}
      # run tests!
      # - run: cat /dev/null | sbt test:test
      # Build uber jar
      - run: cat /dev/null | sbt assembly
  deploy_cloud_run:
#    docker:
#      - image: gcr.io/project/transaction-api
#        auth:
#          username: _json_key  # default username when using a JSON key file to authenticate
#          password: $GCLOUD_SERVICE_KEY  # JSON service account you created, do not encode to base64
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build app binary and Docker image
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
            echo ${GCP_PROJECT_KEY} | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json
            echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV && source $BASH_ENV
            docker build -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME:$TAG .
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GCLOUD_SERVICE_KEY
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: "us.gcr.io"
          image: $IMAGE_NAME
      - cloudrun/deploy:
          platform: "managed"
          image: "us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME"
          service-name: "orb-gcp-cloud-run"
          region: $GOOGLE_COMPUTE_ZONE
          unauthenticated: true

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_test_uberjar
      - deploy_cloud_run:
          requires:
            - build_test_uberjar